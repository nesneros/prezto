# -*- mode: sh -*-

# Add coretutils (installed with brew) to path before doing the prezto stuff
# This is needed so e.g. dircolors util is found

if type brew > /dev/null ; then
    BREW_PREFIX=$(brew --prefix)
    
    PATH="$BREW_PREFIX/opt/coreutils/libexec/gnubin:$PATH"
fi

#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

setopt autopushd

setopt share_history # between shells
setopt inc_append_history # conserve time order

source /etc/unuxus/etc/profile/zshrc

alias md=mkdir -p
compdef md=mkdir

# Why would you ever want grep to treat dirs like normal files?
alias grep="${aliases[grep]:-grep} --directories=skip"

alias -g L='|less'
alias -g H='|head'
alias -g T='|tail -100f'
alias -g G='|grep -e'
alias -g S='|sort'

alias md='mkdir -p'
alias h='history -f 1 | less +G'
alias top='sudo htop'

mcd() {
 mkdir -p "$1" && cd "$1"
}

function fwhere {
    whence -a -v $1 | perl -n -e'/is a shell function from (.*)/ && print "$1\n"'
}

function fedit {
    e $(fwhere $1)
}

# from http://chneukirchen.org/blog/archive/2013/03/10-fresh-zsh-tricks-you-may-not-know.html
imv() {
  local src dst
  for src; do
    [[ -e $src ]] || { print -u2 "$src does not exist"; continue }
    dst=$src
    vared dst
    [[ $src != $dst ]] && mkdir -p $dst:h && mv -n $src $dst
  done
}

# from http://chneukirchen.org/blog/archive/2015/02/10-fancy-zsh-tricks-you-may-not-know.html
_physical_up_line()   { zle backward-char -n $COLUMNS }
_physical_down_line() { zle forward-char  -n $COLUMNS }
zle -N physical-up-line _physical_up_line
zle -N physical-down-line _physical_down_line
bindkey "\e\e[A" physical-up-line    # Alt arrow up
bindkey "\e\CP"  physical-up-line    # Escape Control P
bindkey "\e\e[B" physical-down-line  # Alt arraw down
bindkey "\e\CN" physical-down-line  # Escape Control N

# Move to where the arguments belong.
after-first-word() {
  zle beginning-of-line
  zle emacs-forward-word
  zle forward-char
}
after-second-word() {
  zle beginning-of-line
  zle emacs-forward-word
  zle emacs-forward-word
  zle forward-char
}
zle -N after-first-word
zle -N after-second-word
bindkey "^X1" after-first-word
bindkey "^X2" after-second-word

export WORDCHARS='*?_-.[]~&;!#$%^(){}<>/'

if type emacs > /dev/null ; then
    alias e=e.sh
    export EDITOR=emacs
fi
export VISUAL=$EDITOR    

for file in ~/etc/zsh.d/*.(sh|zsh)(N) ; do
    source "$file"
done

if [[ -n "$BREW_PREFIX" ]] ; then
    MANPATH="$BREW_PREFIX/opt/coreutils/libexec/gnuman:$MANPATH"
fi

[[ -d $HOME/bin ]] && PATH=$HOME/bin:$PATH

# Cleanup PATH and MANPATH
typeset -u path
typeset -u manpath

# Define JAVA_HOME if not already set (only on Darwin)
[ -x /usr/libexec/java_home ] && [ -z "$JAVA_HOME" ] && export JAVA_HOME=$(/usr/libexec/java_home)

cd() {
  if (( $# != 1 )); then
    builtin cd "$@"
    return
  fi

  if [[ -f "$1" ]]; then
    builtin cd "$1:h"
  else
    builtin cd "$1"
  fi
}


# get public ip
function myip {
	local api
	case "$1" in
		"-4")
			api="http://v4.ipv6-test.com/api/myip.php"
			;;
		"-6")
			api="http://v6.ipv6-test.com/api/myip.php"
			;;
		*)
			api="http://ipv6-test.com/api/myip.php"
			;;
	esac
	curl -s "$api"
	echo # Newline.
}
